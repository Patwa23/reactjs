{"ast":null,"code":"import _toConsumableArray from \"/home/prakash/workspace/reactjs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/prakash/workspace/reactjs/src/components/Burger/Burger.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nvar burger = function burger(props) {\n  console.log(\"Inside Burger\", props);\n  var transformedIngredients = Object.keys(props.ingredients).map(function (igKey) {\n    return _toConsumableArray(Array(props.ingredients[igKey])).map(function (_, i) {\n      return React.createElement(BurgerIngredient, {\n        key: igKey + i,\n        type: igKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    });\n  }).reduce(function (arr, el) {\n    return arr.concat(el);\n  }, []);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Please start adding ingredients\");\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Burger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }),\n  /* <BurgerIngredient type =\"cheese\"/>\n  <BurgerIngredient type =\"meat\"/> */\n  transformedIngredients, React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(burger);","map":{"version":3,"sources":["/home/prakash/workspace/reactjs/src/components/Burger/Burger.js"],"names":["React","withRouter","classes","BurgerIngredient","burger","props","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BF,KAA5B;AACA,MAAIG,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACM,WAAlB,EACxBC,GADwB,CACpB,UAAAC,KAAK,EAAG;AACT,WAAO,mBAAIC,KAAK,CAACT,KAAK,CAACM,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,UAACG,CAAD,EAAGC,CAAH,EAAS;AACvD,aAAQ,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEH,KAAK,GAAGG,CAA/B;AAAkC,QAAA,IAAI,EAAEH,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD,KAFM,CAAP;AAGH,GALwB,EAMxBI,MANwB,CAMjB,UAACC,GAAD,EAAKC,EAAL,EAAW;AACf,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACH,GARwB,EAQvB,EARuB,CAA7B;;AASA,MAAGX,sBAAsB,CAACa,MAAvB,KAAkC,CAArC,EAAuC;AACnCb,IAAAA,sBAAsB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAzB;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAGN,OAAO,CAACoB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAEG;;AAEAd,EAAAA,sBAJH,EAME,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADJ;AAUH,CAzBD;;AA2BA,eAAeP,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\n\nconst burger = (props) => {\n    console.log(\"Inside Burger\",props);\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey =>{\n            return [...Array(props.ingredients[igKey])].map((_,i) => {\n              return  <BurgerIngredient key={igKey + i} type={igKey}/>\n            });\n        })\n        .reduce((arr,el) =>{\n            return arr.concat(el)\n        },[]);\n    if(transformedIngredients.length === 0){\n        transformedIngredients = <p>Please start adding ingredients</p>\n    }\n       \n    return (\n        <div className= {classes.Burger}>         \n          <BurgerIngredient type =\"bread-top\"/>\n          {/* <BurgerIngredient type =\"cheese\"/>\n          <BurgerIngredient type =\"meat\"/> */\n           transformedIngredients  \n        }\n          <BurgerIngredient type =\"bread-bottom\"/>\n        </div>\n    );\n};\n\nexport default withRouter(burger);"]},"metadata":{},"sourceType":"module"}