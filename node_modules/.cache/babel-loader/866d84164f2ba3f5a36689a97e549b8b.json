{"ast":null,"code":"import _objectSpread from \"/home/prakash/workspace/reactjs/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/prakash/workspace/reactjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/prakash/workspace/reactjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/prakash/workspace/reactjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/prakash/workspace/reactjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/prakash/workspace/reactjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/prakash/workspace/reactjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/prakash/workspace/reactjs/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2, _this$state;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = (_this$state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      }\n    }, _defineProperty(_this$state, \"ingredients\", null), _defineProperty(_this$state, \"totalPrice\", 4), _defineProperty(_this$state, \"purchasable\", false), _defineProperty(_this$state, \"purchasing\", false), _defineProperty(_this$state, \"loading\", false), _this$state);\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var updatedCount = oldCount + 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchaseState(updatedIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var updatedCount = oldCount - 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceDeduction = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice - priceDeduction;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchaseState(updatedIngredients);\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      // alert('You Continue!');\n      _this.setState({\n        loading: true\n      });\n\n      var orders = {\n        ingredients: _this.state.ingredients,\n        price: _this.state.totalPrice,\n        customer: {\n          name: 'Prakash Patwa',\n          address: {\n            street: 'Rosa Spierlaan',\n            zipCode: '1187 PE',\n            country: 'Netherlands'\n          },\n          email: 'prak.patwa@gmail.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', orders).then(function (response) {\n        //console.log(response))\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(function (error) {\n        //console.log(error)\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://react-my-burger-f7346.firebaseio.com/ingredients').then(function (response) {\n        _this2.setState({\n          ingredients: response.data\n        });\n      });\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.state.ingredients);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      });\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        });\n      }\n\n      var burger = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n\n      if (this.state.ingredients) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.state.ingredients,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler,\n          price: this.state.totalPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, orderSummary));\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/prakash/workspace/reactjs/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","Aux","Burger","BuildControls","Modal","Spinner","OrderSummary","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","totalPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchasing","purchaseCancelHandler","purchaseContinueHandler","loading","orders","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","get","data","sum","Object","keys","map","igKey","reduce","el","purchasable","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport axios from '../../axios-orders';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n\nconst INGREDIENT_PRICES = {\n    salad:0.5,\n    cheese:0.4,\n    meat:1.3,\n    bacon:0.7\n};\n\nclass BurgerBuilder extends Component{\n    state ={\n        ingredients :{\n            salad:0,\n            bacon:0,\n            cheese:0,\n            meat:0\n        },\n        ingredients:null,\n        totalPrice:4,\n        purchasable:false,\n        purchasing:false,\n        loading:false,\n    }\n\n    componentDidMount(){\n        axios.get('https://react-my-burger-f7346.firebaseio.com/ingredients')\n             .then(response =>{\n                 this.setState({ingredients:response.data});\n             })\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n                    .map(igKey => {\n                        return ingredients[igKey];\n                    })\n                    .reduce((sum,el)=>{\n                        return sum + el;\n                    },0);\n        this.setState({purchasable: sum>0});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount =this.state.ingredients[type];\n        const updatedCount =oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition =INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice:newPrice , ingredients : updatedIngredients}); \n        this.updatePurchaseState(updatedIngredients); \n    }\n \n\n    removeIngredientHandler = (type) => {\n        const oldCount =this.state.ingredients[type];\n        if(oldCount<=0){\n            return;\n        }\n        const updatedCount =oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction =INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice:newPrice , ingredients : updatedIngredients});  \n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () =>{\n        this.setState({purchasing:true});\n    }\n\n    purchaseCancelHandler = () =>{\n        this.setState({purchasing:false});\n    }\n\n    purchaseContinueHandler = () => {\n       // alert('You Continue!');\n       this.setState({loading:true});\n       const orders = {\n           ingredients: this.state.ingredients,\n           price: this.state.totalPrice,\n           customer: {\n               name: 'Prakash Patwa',\n               address: {\n                   street: 'Rosa Spierlaan',\n                   zipCode: '1187 PE',\n                   country: 'Netherlands',\n               },\n               email: 'prak.patwa@gmail.com',              \n           },\n           deliveryMethod: 'fastest'    \n       }\n       axios.post('/orders.json', orders)\n            .then(response => {\n                //console.log(response))\n                this.setState({loading:false,purchasing:false});\n            })\n            .catch(error =>{ \n                //console.log(error)\n                this.setState({loading:false,purchasing:false});\n            });\n    }\n\n    render(){\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo){\n            disabledInfo[key]= disabledInfo[key] <= 0\n        }\n        let orderSummary = <OrderSummary \n            ingredients= {this.state.ingredients} \n            price={this.state.totalPrice}\n            purchaseCancelled= {this.purchaseCancelHandler}\n            purchaseContinued= {this.purchaseContinueHandler}/>\n        if(this.state.loading){\n            orderSummary = <Spinner/>;\n        }\n        let burger = <Spinner/>\n        if(this.state.ingredients){\n            burger  =   (\n                <Aux>\n                <Burger ingredients ={this.state.ingredients}/>\n                <BuildControls\n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    disabled={disabledInfo}\n                    purchasable={this.state.purchasable}\n                    ordered={this.purchaseHandler}\n                    price = {this.state.totalPrice}/>\n                </Aux>\n            );\n\n        }\n       \n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                \n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder,axios);\n"]},"metadata":{},"sourceType":"module"}