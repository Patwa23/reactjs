{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,iJCoCHC,EAjCD,SAACC,GACX,IAAMC,EAAa,GACnB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KACR,CACIC,KAAKF,EACLG,OAAOL,EAAMC,YAAYC,KAKrC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACHC,MAAO,CACHC,cAAc,aACdC,QAAQ,eACRC,OAAO,QACPC,OAAQ,iBACRC,QAAQ,OAEZC,IAAKV,EAAGJ,MAAOI,EAAGJ,KARf,IAQsBI,EAAGH,OARzB,OAWX,OACII,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACxBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaU,OAAOC,WAAWtB,EAAMuB,OAAOC,QAAQ,uCCpBhEC,8LAsBEC,KAAK1B,MAAM2B,cAAcD,KAAK1B,MAAM4B,MAAMF,KAAK1B,MAAM6B,yCAIrD,IAAIC,EAAQrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MASZ,OARIL,KAAK1B,MAAMgC,UACXF,EAASJ,KAAK1B,MAAM8B,OAAOvB,IAAI,SAAAR,GAAK,OAC5BU,EAAAC,EAAAC,cAACb,EAAD,CACKoB,IAAKnB,EAAMkC,GACXhC,YAAaF,EAAME,YACnBsB,MAAOxB,EAAMwB,WAI1Bd,EAAAC,EAAAC,cAAA,WACImB,UArCKI,aA0DNC,sBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAMrC,MAAM+B,OACpBE,QAASI,EAAMrC,MAAMiC,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAMC,GAAP,OAAkBS,EAASC,IAAoBX,EAAMC,OAI7DM,CAA4CK,YAAiBf,EAAOgB","file":"static/js/2.d0bcb20b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1bumX\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) =>{\n    const ingredients =[];\n    for(let ingredientName in props.ingredients){\n        ingredients.push(\n            {\n                name:ingredientName,\n                amount:props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig =>{\n        return <span\n            style={{\n                textTransform:'capitalize',\n                display:'inline-block',\n                margin:'0 8px',\n                border: '1px solid #ccc',\n                padding:'5px'\n            }} \n            key={ig.name}>{ig.name}({ig.amount})</span>;\n    })\n\n    return(\n        <div className={classes.Order}>\n        <p>Ingredients: {ingredientOutput}</p>\n        <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n\n    )\n    \n};\n\nexport default order;\n","import React ,{Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\n\nclass Orders extends Component{\n    // state= {\n    //     orders:[],\n    //     loading:true\n    // }\n\n    componentDidMount(){\n        // axios.get('/orders.json')\n        //     .then(res=>{\n        //        // console.log(res.data);\n        //         const fetchedOrders = [];\n        //         for(let key in res.data){\n        //             fetchedOrders.push({\n        //                 ...res.data[key],\n        //                 id:key\n        //             });\n        //         }\n        //         this.setState({loading:false, orders:fetchedOrders});\n        //     })\n        //     .catch(err=>{\n        //         this.setState({loading:false});\n        //     });\n        this.props.onFetchOrders(this.props.token,this.props.userId);\n    }\n\n    render(){\n        let orders =<Spinner/>;\n        if(!this.props.loading){\n            orders = this.props.orders.map(order => (\n                    <Order \n                         key={order.id}\n                         ingredients={order.ingredients}\n                         price={order.price}/>\n                ))\n        };\n        return(\n            <div>\n               {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token,userId))\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));"],"sourceRoot":""}